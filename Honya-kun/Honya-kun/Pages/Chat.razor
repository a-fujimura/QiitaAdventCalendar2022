@page "/chat"
@using Radzen
@using static TexTra.APIAccessor_ja
<RadzenSplitter Orientation="Orientation.Vertical" Style="height:850px;">
    <RadzenSplitterPane Size="90%">
        <div class="h-100" style="overflow-y: scroll;">
            <Honya_kun.Components.LineChat @bind-Value=@value></Honya_kun.Components.LineChat>
        </div>
    </RadzenSplitterPane>
    <RadzenSplitterPane Size="10%">
        <RadzenSplitter Orientation="Orientation.Horizontal">
            <RadzenSplitterPane Size="70%">
                <RadzenTextArea class="w-100 h-100" @bind-Value=@sendStr></RadzenTextArea>
            </RadzenSplitterPane>
            <RadzenSplitterPane Size="30%">
                <RadzenButton class="w-100 h-100" Text="送信" Click=@SendClick IsBusy=@IsBusy BusyText="通信中"></RadzenButton>
            </RadzenSplitterPane>
        </RadzenSplitter>
    </RadzenSplitterPane>
</RadzenSplitter>
@code {
    string value = string.Empty;
    string sendStr = string.Empty;
    bool IsBusy = false;

    string chatCss
    {
        get => "<style>" +
               "/*==============" +
               "LINE風フキダシ" +
               "===============*/" +
               "/*フレームとフォント*/" +
               ".kaiwa.line {" +
               "    width: 100%;" +
               "    height:100%;" +
               //"    max-width: 500px;" +
               "    margin: 0 auto;" +
               "    padding: 10px 0;" +
               "    background: #769ece;" +
               "    font-family: \"ヒラギノ角ゴ Pro W3\",\"Hiragino Kaku Gothic Pro\",\"Helvetica Neue\", \"Lucida Sans Unicode\", \"Arial\";" +
               "    font-size: 16px;" +
               "    color: #333;" +
               "    line-height: 1.4;" +
               "    overflow: hidden;" +
               "}" +
               "/*フキダシ共通*/" +
               ".kaiwa.line .fukidasi {" +
               "    position: relative;" +
               "    display: inline-block;" +
               "    max-width: 500px;" +
               "    margin: 8px 0 0;" +
               "    padding: 9px 14px;" +
               "    border-radius: 19px;" +
               "    overflow-wrap: break-word;" +
               "    clear: both;" +
               "    box-sizing: content-box;/*はてな用*/" +
               "}" +
               "/*フキダシ左*/" +
               ".kaiwa.line .fukidasi.left {" +
               "    float: left;" +
               "    margin-left: 62px;" +
               "    background: white;" +
               "}" +
               "/*グループのときのフキダシ*/" +
               ".kaiwa.line .name + .fukidasi.left {" +
               "    margin-top: 5px;" +
               "}" +
               "/*フキダシ右*/" +
               ".kaiwa.line .fukidasi.right {" +
               "    float: right;" +
               "    margin-right: 12px;" +
               "    background: #7adc40;" +
               "}" +
               "/*相手の名前*/" +
               ".kaiwa.line .name {" +
               "    clear: right;" +
               "    margin-left: 62px;" +
               "    color: white;" +
               "}" +
               "/*ユーザアイコン*/" +
               ".kaiwa.line .icon {" +
               "    position: absolute;" +
               "    width: 40px;" +
               "    height: 40px;" +
               "    left: -54px;" +
               "    top: -2px;" +
               "    border-radius: 20px;" +
               "}" +
               "/*グループのときのユーザアイコン*/" +
               ".kaiwa.line .name + .left .icon {" +
               "    top: -1.8em;" +
               "}" +
               "/*しっぽ共通*/" +
               ".kaiwa.line .fukidasi::after {" +
               "    position: absolute;" +
               "    content: \"\";" +
               "    width: 24px;" +
               "    height: 36px;" +
               "    top: -21px;" +
               "}" +
               "/*しっぽ左*/" +
               ".kaiwa.line .fukidasi.left:after {" +
               "    left: -10px;" +
               "    border-radius: 18px 0 6px 18px/18px 0 1px 18px;" +
               "    box-shadow: -3px -15px 0 -5px white inset;" +
               "}" +
               "/*しっぽ右*/" +
               ".kaiwa.line .fukidasi.right::after {" +
               "    right: -10px;" +
               "    border-radius: 0 18px 18px 6px/0 18px 18px 1px;" +
               "    box-shadow: inset 3px -15px 0 -5px #7adc40;" +
               "}" +
               "/*フキダシが続いてしっぽがないとき*/" +
               ".kaiwa.line .left + .left::after," +
               ".kaiwa.line .right + .right::after {" +
               "    content: none;" +
               "}" +
               "</style>";
    }

    protected override void OnParametersSet()
    {
        value = chatCss;
        value +=
        "<div class=\"kaiwa line\">" +
        "    <div class=\"name\">" +
        "        ほんやくん" +
        "    </div>" +
        "    <div class=\"fukidasi left\">" +
        "        <img class=\"icon\" src=\"img/icon.png\" alt=\"\">こんにちは！" +
        "    </div>" +
        "    <div class=\"fukidasi left\">" +
        "        日本語→英語の翻訳ができるほんや君です！" +
        "    </div>" +
        " </div>";
    }

    async Task SendClick()
    {
        if (string.IsNullOrEmpty(sendStr))
        {
            // Nothing
        }
        else
        {
            IsBusy = true;
            List<APIResponseBean> get = new List<APIResponseBean>();
            value = value.TrimEnd(new char[6] { '<', '/', 'd', 'i', 'v', '>' });
            value += "<div class=\"fukidasi right\">" + sendStr + "</div>";
            await Task.WhenAll(new Task[] {
                Task.Factory.StartNew(() => { get = TexTra.APIAccessor_ja.get_auto_trans(sendStr, Language.ja, Language.en, out APIResponseBean aPIResponseBean); }) });

            if (get.Any())
            {
                var newValue = ((TexTra.APIAccessor_ja.AutoTransInfo)get[0].value).text_translated;
                value += "<div class=\"fukidasi left\"><img class=\"icon\" src=\"img/icon.png\" alt=\"\">" + newValue + "</div>";
            }
            else
            {
                value += "<div class=\"fukidasi left\">" + "翻訳できませんでした・・・" + "</div>";
            }
            value += " </div>";
            IsBusy = false;
        }
    }
}
